generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email     String    @unique
  password  String
  name      String?
  sessions  Session[]
  Tweets    Tweet[]
  follows   Follow[]  @relation("follower")
  followers Follow[]  @relation("following")
  like      like[]
  pfp       pfp[]
}

model Session {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  expiresAt DateTime @db.Timestamptz()
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid

  @@index([userId])
}

model Tweet {
  id     String @id @default(dbgenerated("gen_random_uuid ()")) @db.Uuid
  body   String
  length Int
  user   User?  @relation(fields: [userId], references: [id])
  userId String @db.Uuid
  Name   String @default("")
  likes  Int?
  like   like[]

  @@index([userId])
}

model Follow {
  id          String @id @default(dbgenerated("gen_random_uuid ()")) @db.Uuid
  followerId  String @db.Uuid
  follower    User   @relation("follower", fields: [followerId], references: [id])
  following   User   @relation("following", fields: [followingId], references: [id])
  followingId String @db.Uuid
}

model like {
  id    String @id @default(dbgenerated("gen_random_uuid ()")) @db.Uuid
  liked Tweet  @relation(fields: [tweetId], references: [id])
  liker User   @relation(fields: [userId], references: [id])

  tweetId String @db.Uuid
  userId  String @db.Uuid
}

model pfp {
  id         String @id @default(dbgenerated("gen_random_uuid ()")) @db.Uuid
  data       Bytes
  fileName   String
  userForPic User   @relation(fields: [userId], references: [id])

  userId String @db.Uuid
}
